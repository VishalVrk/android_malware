const express = require('express');
const multer = require('multer');
const AdmZip = require('adm-zip');
const cors = require('cors');
const fs = require('fs');
const path = require('path');

const app = express();
const upload = multer({ dest: 'uploads/' });

app.use(cors());
app.use(express.json());

app.post('/analyze', upload.single('apk'), (req, res) => {
  if (!req.file) {
    return res.status(400).json({ error: 'No file uploaded' });
  }

  const apkPath = req.file.path;

  try {
    const zip = new AdmZip(apkPath);
    const zipEntries = zip.getEntries();

    const analysis = {
      fileName: req.file.originalname,
      totalEntries: zipEntries.length,
      files: zipEntries.map((entry, index) => ({
        id: index + 1,
        name: entry.entryName,
        isDirectory: entry.isDirectory,
        size: entry.header.size
      }))
    };

    // Delete the uploaded file
    fs.unlinkSync(apkPath);

    res.json(analysis);
  } catch (error) {
    console.error('Error analyzing APK:', error);
    res.status(500).json({ error: 'Error analyzing APK' });
  }
});

const PORT = process.env.PORT || 3001;
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});